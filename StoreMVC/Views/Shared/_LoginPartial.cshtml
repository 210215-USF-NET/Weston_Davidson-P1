@using StoreController;


@using Microsoft.AspNetCore.Identity
@using StoreModel
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject CustomerBL customerBL

@using System.Security.Claims

@{
    var userid = SignInManager.UserManager.GetUserId(User);
}
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        Customer cloggedin = customerBL.GetCustomerByFK(UserManager.GetUserId(User));
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Cart" asp-controller="Cart" asp-action="Index" asp-route-id="@cloggedin.AppUserFK" title="Manage">@cloggedin.Username</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@User.Identity.Name</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
